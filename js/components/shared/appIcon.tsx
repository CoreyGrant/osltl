import React from 'react';
import {connect} from 'react-redux';
import { RootState } from '../../store/store';

export type AppIconProps = {
    name: string;
    size: "xs" | "sm" | "md" | "lg" | "xl";
    ext: 'svg' | 'png' | 'webp';
    color?: string;
    darkMode?: boolean;
    props?: any;
}

export class AppIcon extends React.Component<AppIconProps>{
    constructor(props){
        super(props);
    }
    render(){
        let color = this.props.color;
        const innerProps = this.props.props || {};
        if(!color){
            color = this.props.darkMode ? '#a29061' : '#212529';
        }
        if(this.props.ext === 'svg'){
            let width, height;
            switch(this.props.size){
                case "xs":
                    width = height = 14;
                    break;
                case "sm":
                    width = height = 18;
                    break;
                case "md":
                    width = height = 24;
                    break;
                case "lg":
                    width = height = 30;
                    break;
                case "xl":
                    width = height = 40;
                    break;
            }
            return <div className={"app-icon app-icon-" + this.props.size} {...innerProps}>
                <SvgAppIcon name={this.props.name} fill={color} width={width} height={height}/>
            </div>
        } else {
            return <div className={"app-icon app-icon-" + this.props.size} {...innerProps}>
                <img src={"icon/" + this.props.name + "." + this.props.ext}/>
            </div>
        }
    }
}

type SvgAppIconProps = {
    name: string;
    fill: string;
    width: number;
    height: number;
};
function to2Dp(str){
    return (Math.ceil(+str * 100)/100).toString(10);
}
class SvgAppIcon extends React.Component<SvgAppIconProps>{
    constructor(props){super(props)}
    render(){
        switch(this.props.name){
            case "close":
                return <svg fill="none" viewBox="400 190 650 650">
            <path fill={this.props.fill} d="M718.5,453.8l224-224.3c20.4-20.4,53.3-20.4,73.6,0c20.4,20.4,20.4,53.3,0,73.6l-224,224.6l224,224
               c20.4,20.4,20.4,53.3,0,73.6c-20.4,20.4-53.3,20.4-73.6,0l-224-224l-224.6,224c-20.4,20.4-53.3,20.4-73.6,0
               c-20.4-20.4-20.4-53.3,0-73.6l224-224L420.4,303.2c-20.5-20.4-20.5-53.3-0.1-73.6s53.3-20.4,73.6,0l224.6,224V453.8z"/>
            </svg>
            case "chat":
                return <svg fill="none" viewBox="0 0 28 28">
                <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 13.5997 2.37562 15.1116 3.04346 16.4525C3.22094 16.8088 3.28001 17.2161 3.17712 17.6006L2.58151 19.8267C2.32295 20.793 3.20701 21.677 4.17335 21.4185L6.39939 20.8229C6.78393 20.72 7.19121 20.7791 7.54753 20.9565C8.88837 21.6244 10.4003 22 12 22Z" stroke={this.props.fill} stroke-width="1.5"/>
                <path d="M8 10.5H16" stroke={this.props.fill} stroke-width="1.5" stroke-linecap="round"/>
                <path d="M8 14H13.5" stroke={this.props.fill} stroke-width="1.5" stroke-linecap="round"/>
                </svg>
            case "darkMode":
                return <svg fill={this.props.fill} viewBox="0 0 25 25">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <g fill-rule="nonzero">
                        <path fill={this.props.fill} d="M12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 C6.4771525,2 2,6.4771525 2,12 C2,17.5228475 6.4771525,22 12,22 Z M12,20 L12,4 C16.418278,4 20,7.581722 20,12 C20,16.418278 16.418278,20 12,20 Z">
            
            </path>
                    </g>
                </g>
            </svg>
            case "info":
                return <svg fill="none" viewBox="0 1.5 23 23">
                <circle cx="12" cy="12" r="10" stroke={this.props.fill} stroke-width="1.5"/>
                <path d="M12 17V11" stroke={this.props.fill} stroke-width="1.5" stroke-linecap="round"/>
                <circle cx="1" cy="1" r="1" transform="matrix(1 0 0 -1 11 9)" fill={this.props.fill}/>
                </svg>;
            case "refresh":
                return <svg fill="none" viewBox="0 0 27 27">
                <path d="M12 21C7.02944 21 3 16.9706 3 12C3 9.69494 3.86656 7.59227 5.29168 6L8 3M12 3C16.9706 3 21 7.02944 21 12C21 14.3051 20.1334 16.4077 18.7083 18L16 21M3 3H8M8 3V8M21 21H16M16 21V16" stroke={this.props.fill} stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>;
            case "reset":
                return <svg fill="none" viewBox="0 0 24 24">
                <path d="M21 3V8M21 8H16M21 8L18 5.29168C16.4077 3.86656 14.3051 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.2832 21 19.8675 18.008 20.777 14" stroke={this.props.fill} stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>;
            case "simple":
                return <svg viewBox="20 20 40 40">
                <path fill-opacity="1" stroke-width="0.1" stroke-linejoin="round" fill={this.props.fill} stroke={this.props.fill} d="M 42.5,22C 49.4036,22 55,27.5964 55,34.5C 55,41.4036 49.4036,47 42.5,47C 40.1356,47 37.9245,46.3435 36,45.2426L 26.9749,54.2678C 25.8033,55.4393 23.9038,55.4393 22.7322,54.2678C 21.5607,53.0962 21.5607,51.1967 22.7322,50.0251L 31.7971,40.961C 30.6565,39.0755 30,36.8644 30,34.5C 30,27.5964 35.5964,22 42.5,22 Z M 42.5,26C 37.8056,26 34,29.8056 34,34.5C 34,39.1944 37.8056,43 42.5,43C 47.1944,43 51,39.1944 51,34.5C 51,29.8056 47.1944,26 42.5,26 Z "/>
            </svg>
            case "user":
                return <svg fill="none" viewBox="0 0 28 28">
                <path d="M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke={this.props.fill}/>
                <path d="M12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke={this.props.fill}/>
                </svg>
            case "account":
                return <svg fill={this.props.fill} viewBox="0 0 25 25">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M8.70711 4.70711C9.09763 4.31658 9.09763 3.68342 8.70711 3.29289C8.31658 2.90237 7.68342 2.90237 7.29289 3.29289L3.29289 7.29289C2.90237 7.68342 2.90237 8.31658 3.29289 8.70711L7.29289 12.7071C7.68342 13.0976 8.31658 13.0976 8.70711 12.7071C9.09763 12.3166 9.09763 11.6834 8.70711 11.2929L6.41421 9H16C16.5523 9 17 8.55228 17 8C17 7.44772 16.5523 7 16 7H6.41421L8.70711 4.70711ZM20.7071 15.2929L16.7071 11.2929C16.3166 10.9024 15.6834 10.9024 15.2929 11.2929C14.9024 11.6834 14.9024 12.3166 15.2929 12.7071L17.5858 15H8C7.44772 15 7 15.4477 7 16C7 16.5523 7.44772 17 8 17H17.5858L15.2929 19.2929C14.9024 19.6834 14.9024 20.3166 15.2929 20.7071C15.6834 21.0976 16.3166 21.0976 16.7071 20.7071L20.7071 16.7071C21.0976 16.3166 21.0976 15.6834 20.7071 15.2929Z"/>
                </svg>
            case "tour":
                return <svg fill={this.props.fill} viewBox="0 0 400 400">
           <path d="M377.071,101.569C351.143,75.64,316.668,61.36,280,61.36c-33.428,0-65.031,11.867-90,33.608
               c-24.969-21.741-56.572-33.608-90-33.608c-36.668,0-71.143,14.28-97.071,40.208C1.054,103.444,0,105.987,0,108.639v200
               c0,4.044,2.437,7.691,6.173,9.239c3.737,1.549,8.038,0.692,10.898-2.167C39.223,293.559,68.674,281.36,100,281.36
               s60.777,12.199,82.929,34.351c0.032,0.032,0.068,0.059,0.1,0.091c0.203,0.198,0.411,0.39,0.63,0.57
               c0.125,0.103,0.257,0.193,0.386,0.289c0.133,0.099,0.262,0.202,0.4,0.294c0.149,0.099,0.303,0.186,0.455,0.277
               c0.128,0.076,0.252,0.156,0.384,0.227c0.154,0.083,0.313,0.153,0.47,0.226c0.139,0.065,0.275,0.134,0.417,0.193
               c0.153,0.063,0.31,0.115,0.466,0.17c0.152,0.054,0.302,0.113,0.458,0.16c0.158,0.048,0.318,0.083,0.477,0.123
               c0.157,0.039,0.312,0.083,0.472,0.115c0.186,0.037,0.374,0.059,0.561,0.086c0.136,0.019,0.269,0.045,0.406,0.059
               c0.658,0.065,1.32,0.065,1.978,0c0.137-0.013,0.271-0.04,0.406-0.059c0.188-0.026,0.375-0.049,0.561-0.086
               c0.16-0.032,0.315-0.076,0.472-0.115c0.159-0.04,0.319-0.075,0.477-0.123c0.156-0.047,0.306-0.106,0.458-0.16
               c0.156-0.056,0.312-0.107,0.466-0.17c0.142-0.059,0.278-0.128,0.417-0.193c0.157-0.074,0.316-0.144,0.47-0.226
               c0.131-0.07,0.256-0.151,0.384-0.227c0.153-0.091,0.307-0.177,0.455-0.277c0.138-0.092,0.267-0.195,0.4-0.294
               c0.129-0.096,0.261-0.186,0.386-0.289c0.219-0.18,0.427-0.372,0.63-0.57c0.033-0.032,0.068-0.058,0.1-0.091
               c22.151-22.151,51.603-34.351,82.929-34.351s60.777,12.199,82.929,34.351c1.913,1.913,4.471,2.929,7.073,2.929
               c1.288,0,2.588-0.25,3.825-0.762c3.736-1.548,6.173-5.194,6.173-9.239v-200C380,105.987,378.946,103.444,377.071,101.569z
                M20,287.04V112.879C41.786,92.522,70.035,81.36,100,81.36c29.967,0,58.213,11.171,80,31.531v174.154
               c-23.166-16.682-50.89-25.685-80-25.685C70.892,261.36,43.166,270.359,20,287.04z M360,287.04c-23.166-16.681-50.892-25.68-80-25.68
               c-29.11,0-56.834,9.002-80,25.685V112.891c21.787-20.36,50.033-31.531,80-31.531c29.965,0,58.214,11.162,80,31.519V287.04z"/>
           </svg>
           case 'settings':
                return <svg fill={this.props.fill} viewBox="0 0 32 32">
                <path d="M30.015 12.97l-2.567-0.569c-0.2-0.64-0.462-1.252-0.762-1.841l1.389-2.313c0.518-0.829 0.78-2.047 0-2.829l-1.415-1.414c-0.78-0.781-2.098-0.64-2.894-0.088l-2.251 1.434c-0.584-0.303-1.195-0.563-1.829-0.768l-0.576-2.598c-0.172-0.953-1.005-1.984-2.11-1.984h-2c-1.104 0-1.781 1.047-2 2l-0.642 2.567c-0.678 0.216-1.328 0.492-1.948 0.819l-2.308-1.47c-0.795-0.552-2.114-0.692-2.894 0.088l-1.415 1.414c-0.781 0.782-0.519 2 0 2.828l1.461 2.435c-0.274 0.552-0.517 1.123-0.705 1.72l-2.566 0.569c-0.953 0.171-1.984 1.005-1.984 2.109v2c0 1.105 1.047 1.782 2 2l2.598 0.649c0.179 0.551 0.404 1.080 0.658 1.593l-1.462 2.438c-0.518 0.828-0.78 2.047 0 2.828l1.415 1.414c0.78 0.782 2.098 0.64 2.894 0.089l2.313-1.474c0.623 0.329 1.277 0.608 1.96 0.823l0.64 2.559c0.219 0.953 0.896 2 2 2h2c1.105 0 1.938-1.032 2.11-1.985l0.577-2.604c0.628-0.203 1.23-0.459 1.808-0.758l2.256 1.438c0.796 0.552 2.114 0.692 2.895-0.089l1.415-1.414c0.78-0.782 0.518-2 0-2.828l-1.39-2.317c0.279-0.549 0.521-1.12 0.716-1.714l2.599-0.649c0.953-0.219 2-0.895 2-2v-2c0-1.104-1.031-1.938-1.985-2.11zM30.001 16.939c-0.085 0.061-0.245 0.145-0.448 0.192l-3.708 0.926-0.344 1.051c-0.155 0.474-0.356 0.954-0.597 1.428l-0.502 0.986 1.959 3.267c0.125 0.2 0.183 0.379 0.201 0.485l-1.316 1.314c-0.127-0.040-0.271-0.092-0.341-0.14l-3.292-2.099-1.023 0.529c-0.493 0.256-0.999 0.468-1.503 0.631l-1.090 0.352-0.824 3.723c-0.038 0.199-0.145 0.36-0.218 0.417h-1.8c-0.061-0.085-0.145-0.245-0.191-0.448l-0.921-3.681-1.066-0.338c-0.549-0.173-1.097-0.404-1.63-0.684l-1.028-0.543-3.293 2.099c-0.135 0.091-0.279 0.143-0.409 0.143l-1.311-1.276c0.018-0.104 0.072-0.274 0.181-0.449l2.045-3.408-0.487-0.98c-0.227-0.462-0.407-0.895-0.547-1.325l-0.343-1.052-3.671-0.918c-0.231-0.052-0.398-0.139-0.485-0.2v-1.86c0.001 0.001 0.002 0.001 0.005 0.001 0.034 0 0.198-0.117 0.335-0.142l3.772-0.835 0.346-1.103c0.141-0.449 0.333-0.917 0.588-1.43l0.487-0.98-2.024-3.373c-0.125-0.201-0.184-0.38-0.201-0.485l1.315-1.314c0.128 0.041 0.271 0.093 0.34 0.14l3.354 2.138 1.027-0.542c0.527-0.278 1.073-0.507 1.622-0.682l1.063-0.338 0.912-3.649c0.053-0.231 0.138-0.398 0.2-0.485h1.859c-0.014 0.020 0.115 0.195 0.142 0.339l0.84 3.794 1.089 0.352c0.511 0.165 1.023 0.38 1.523 0.639l1.023 0.532 3.224-2.053c0.135-0.092 0.279-0.143 0.409-0.143l1.313 1.276c-0.017 0.104-0.072 0.276-0.181 0.45l-1.98 3.296 0.505 0.988c0.273 0.533 0.48 1.033 0.635 1.529l0.346 1.104 3.697 0.82c0.224 0.041 0.398 0.171 0.434 0.241zM16.013 9.99c-3.321 0-6.023 2.697-6.023 6.010s2.702 6.010 6.023 6.010 6.023-2.697 6.023-6.009c0-3.313-2.702-6.010-6.023-6.010zM16 20c-2.205 0-4-1.794-4-4s1.794-4 4-4c2.206 0 4 1.794 4 4s-1.794 4-4 4z"></path>
            </svg>
        }
    }
}

export default connect((state: RootState) => ({
    darkMode: state.app.darkMode
}), {})(AppIcon)